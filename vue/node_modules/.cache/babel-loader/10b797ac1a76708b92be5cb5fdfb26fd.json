{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { isNil } from 'lodash-unified';\nimport '../../../hooks/index2.mjs';\nimport '../../../utils/index2.mjs';\nimport '../../../constants/index2.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime2.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index2.mjs';\nimport { isNumber } from '@vueuse/core';\nimport { CHANGE_EVENT, INPUT_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event2.mjs';\nconst inputNumberProps = buildProps({\n  id: {\n    type: String,\n    default: void 0\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  stepStrictly: Boolean,\n  max: {\n    type: Number,\n    default: Number.POSITIVE_INFINITY\n  },\n  min: {\n    type: Number,\n    default: Number.NEGATIVE_INFINITY\n  },\n  modelValue: Number,\n  disabled: Boolean,\n  size: useSizeProp,\n  controls: {\n    type: Boolean,\n    default: true\n  },\n  controlsPosition: {\n    type: String,\n    default: \"\",\n    values: [\"\", \"right\"]\n  },\n  valueOnClear: {\n    type: [String, Number, null],\n    validator: val => val === null || isNumber(val) || [\"min\", \"max\"].includes(val),\n    default: null\n  },\n  name: String,\n  label: String,\n  placeholder: String,\n  precision: {\n    type: Number,\n    validator: val => val >= 0 && val === Number.parseInt(`${val}`, 10)\n  }\n});\nconst inputNumberEmits = {\n  [CHANGE_EVENT]: (prev, cur) => prev !== cur,\n  blur: e => e instanceof FocusEvent,\n  focus: e => e instanceof FocusEvent,\n  [INPUT_EVENT]: val => isNumber(val) || isNil(val),\n  [UPDATE_MODEL_EVENT]: val => isNumber(val) || isNil(val)\n};\nexport { inputNumberEmits, inputNumberProps };","map":{"version":3,"mappings":";;;;;;;;;AAQY,MAACA,gBAAgB,GAAGC,UAAU,CAAC;EACzCC,EAAE,EAAE;IACFC,IAAI,EAAEC,MADJ;IAEFC,OAAO,EAAE,KAAK;EAFZ,CADqC;EAKzCC,IAAI,EAAE;IACJH,IAAI,EAAEI,MADF;IAEJF,OAAO,EAAE;EAFL,CALmC;EASzCG,YAAY,EAAEC,OAT2B;EAUzCC,GAAG,EAAE;IACHP,IAAI,EAAEI,MADH;IAEHF,OAAO,EAAEE,MAAM,CAACI;EAFb,CAVoC;EAczCC,GAAG,EAAE;IACHT,IAAI,EAAEI,MADH;IAEHF,OAAO,EAAEE,MAAM,CAACM;EAFb,CAdoC;EAkBzCC,UAAU,EAAEP,MAlB6B;EAmBzCQ,QAAQ,EAAEN,OAnB+B;EAoBzCO,IAAI,EAAEC,WApBmC;EAqBzCC,QAAQ,EAAE;IACRf,IAAI,EAAEM,OADE;IAERJ,OAAO,EAAE;EAFD,CArB+B;EAyBzCc,gBAAgB,EAAE;IAChBhB,IAAI,EAAEC,MADU;IAEhBC,OAAO,EAAE,EAFO;IAGhBe,MAAM,EAAE,CAAC,EAAD,EAAK,OAAL;EAHQ,CAzBuB;EA8BzCC,YAAY,EAAE;IACZlB,IAAI,EAAE,CAACC,MAAD,EAASG,MAAT,EAAiB,IAAjB,CADM;IAEZe,SAAS,EAAGC,GAAD,IAASA,GAAG,KAAK,IAAR,IAAgBC,QAAQ,CAACD,GAAD,CAAxB,IAAiC,CAAC,KAAD,EAAQ,KAAR,EAAeE,QAAf,CAAwBF,GAAxB,CAFzC;IAGZlB,OAAO,EAAE;EAHG,CA9B2B;EAmCzCqB,IAAI,EAAEtB,MAnCmC;EAoCzCuB,KAAK,EAAEvB,MApCkC;EAqCzCwB,WAAW,EAAExB,MArC4B;EAsCzCyB,SAAS,EAAE;IACT1B,IAAI,EAAEI,MADG;IAETe,SAAS,EAAGC,GAAD,IAASA,GAAG,IAAI,CAAP,IAAYA,GAAG,KAAKhB,MAAM,CAACuB,QAAP,CAAiB,GAAEP,GAAI,EAAvB,EAA0B,EAA1B;EAF/B;AAtC8B,CAAD,CAA9B;AA2CA,MAACQ,gBAAgB,GAAG;EAC9B,CAACC,YAAD,GAAgB,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,KAAKC,GADV;EAE9BC,IAAI,EAAGC,CAAD,IAAOA,CAAC,YAAYC,UAFI;EAG9BC,KAAK,EAAGF,CAAD,IAAOA,CAAC,YAAYC,UAHG;EAI9B,CAACE,WAAD,GAAgBhB,GAAD,IAASC,QAAQ,CAACD,GAAD,CAAR,IAAiBiB,KAAK,CAACjB,GAAD,CAJhB;EAK9B,CAACkB,kBAAD,GAAuBlB,GAAD,IAASC,QAAQ,CAACD,GAAD,CAAR,IAAiBiB,KAAK,CAACjB,GAAD;AALvB,CAApB","names":["inputNumberProps","buildProps","id","type","String","default","step","Number","stepStrictly","Boolean","max","POSITIVE_INFINITY","min","NEGATIVE_INFINITY","modelValue","disabled","size","useSizeProp","controls","controlsPosition","values","valueOnClear","validator","val","isNumber","includes","name","label","placeholder","precision","parseInt","inputNumberEmits","CHANGE_EVENT","prev","cur","blur","e","FocusEvent","focus","INPUT_EVENT","isNil","UPDATE_MODEL_EVENT"],"sources":["../../../../../../packages/components/input-number/src/input-number.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, isNumber } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type InputNumber from './input-number.vue'\n\nexport const inputNumberProps = buildProps({\n  id: {\n    type: String,\n    default: undefined,\n  },\n  step: {\n    type: Number,\n    default: 1,\n  },\n  stepStrictly: Boolean,\n  max: {\n    type: Number,\n    default: Number.POSITIVE_INFINITY,\n  },\n  min: {\n    type: Number,\n    default: Number.NEGATIVE_INFINITY,\n  },\n  modelValue: Number,\n  disabled: Boolean,\n  size: useSizeProp,\n  controls: {\n    type: Boolean,\n    default: true,\n  },\n  controlsPosition: {\n    type: String,\n    default: '',\n    values: ['', 'right'],\n  },\n  valueOnClear: {\n    type: [String, Number, null],\n    validator: (val: 'min' | 'max' | number | null) =>\n      val === null || isNumber(val) || ['min', 'max'].includes(val),\n    default: null,\n  },\n  name: String,\n  label: String,\n  placeholder: String,\n  precision: {\n    type: Number,\n    validator: (val: number) =>\n      val >= 0 && val === Number.parseInt(`${val}`, 10),\n  },\n} as const)\nexport type InputNumberProps = ExtractPropTypes<typeof inputNumberProps>\n\nexport const inputNumberEmits = {\n  [CHANGE_EVENT]: (prev: number | undefined, cur: number | undefined) =>\n    prev !== cur,\n  blur: (e: FocusEvent) => e instanceof FocusEvent,\n  focus: (e: FocusEvent) => e instanceof FocusEvent,\n  [INPUT_EVENT]: (val: number | null | undefined) =>\n    isNumber(val) || isNil(val),\n  [UPDATE_MODEL_EVENT]: (val: number | undefined) =>\n    isNumber(val) || isNil(val),\n}\nexport type InputNumberEmits = typeof inputNumberEmits\n\nexport type InputNumberInstance = InstanceType<typeof InputNumber>\n"]},"metadata":{},"sourceType":"module"}